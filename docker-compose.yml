services:
  api:
    build: .
    container_name: api
    restart: unless-stopped
    ports:
      - '${PORT}:${PORT}'
    environment:
      - PORT=${PORT}
      - GOOGLE_CREDENTIALS_PATH=${GOOGLE_CREDENTIALS_PATH}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - .:/app
      - /app/dist
      - /app/node_modules
      - /app/drizzle
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    restart: unless-stopped

volumes:
  pg_data:
  redis_data: